    1  microk8s status --wait-ready
    2  microk8s config
    3  alias mk='microk8s kubectl'
    4  mk get nodes
    5  mk get service
    6  microk8s status --wait-ready
    7  microk8s enable dashboard
    8  microk8s status --wait-ready
    9  microk8s dashboard-proxy
   10  microk8s kubectl port-forward -n kube-system service/kubernetes-dashboard 10443:443
   11  sudo microk8s.refresh-certs --cert ca.crt
   12  microk8s dashboard-proxy
   13  sudo mkdir -p /etc/opt/chrome/policies/managed
   14  nano /etc/opt/chrome/policies/managed/mintlsver.json
   15  sudo nano /etc/opt/chrome/policies/managed/mintlsver.json
   16  microk8s dashboard-proxy
   17  sudo nano /var/snap/microk8s/current/certs/csr.conf.template
   18  sudo microk8s refresh-certs --cert front-proxy-client.crt
   19  ${KUBE_VERSION}
   20  echo ${KUBE_VERSION}
   21  echo $KUBE_VERSION
   22  microk8s --version
   23  microk8s version
   24  curl -LO https://dl.k8s.io/release/v1.31.1/bin/linux/amd64/kubectl
   25  chmod +x ./kubectl
   26  sudo mv ./kubectl /usr/local/bin/kubectl
   27  kubectl version --client
   28  kubectl cluster-info
   29  kubectl version && kubectl get nodes,namespaces
   30  head $HOME/.kube/config
   31  echo $HOME
   32  ll /usr/local/bin/kubectl
   33  ll ./kubectl
   34  ll./
   35  ll ./
   36  ll ./kube
   37  ll .kube
   38  install -o root -g root -m 0755 kubectl /usr/bin/kubectl
   39  curl -LO https://dl.k8s.io/release/v${KUBE_VERSION}/bin/linux/amd64/kubectl
   40  install -o root -g root -m 0755 kubectl /usr/bin/kubectl
   41  sudo install -o root -g root -m 0755 kubectl /usr/bin/kubectl
   42  microk8s config > $HOME/.kube/config
   43  cat /.kube/config
   44  cat $HOME/.kube/config
   45  kubectl version && kubectl get nodes,namespaces
   46  echo 'alias k=kubectl' >>~/.bashrc
   47  echo 'source <(kubectl completion bash)' >>~/.bashrc
   48  echo 'complete -F __start_kubectl k' >>~/.bashrc
   49  source ~/.bashrc |
   50  history
   51  history | grep port
   52  k port-forward -n kube-system service/kubernetes-dashboard 10443:443
   53  kubectl port-forward -n kube-system service/kubernetes-dashboard 10443:443 --address 89.169.142.85
   54  kubectl port-forward -n kube-system service/kubernetes-dashboard 10443:443 --address 0.0.0.0
   55  sudo microk8s config
   56  kubectl config get-contexts
   57  kubectl config use-context microk8s
   58  kubectl get nodes
   59  kubectl port-forward -n kube-system service/kubernetes-dashboard 10443:443 --address 0.0.0.0
   60  token=$(microk8s kubectl -n kube-system get secret | grep default-token | cut -d " " -f1)
   61  microk8s kubectl -n kube-system describe secret $token
   62  kubectl port-forward -n kube-system service/kubernetes-dashboard 10443:443 --address 0.0.0.0
   63  history
   64  ll
   65  sudo -i
   66  sudo snap install microk8s --classic --channel=1.31
   67  sudo usermod -a -G microk8s $USER
   68  mkdir -p ~/.kube
   69  chmod 0700 ~/.kube
   70  su - $USER
   71  echo $USER
   72  sudo -i
   73  passwd
   74  openssl passwd -1 -salt xyz yourpass
   75  openssl passwd -1 -salt xyz admin123
   76  sudo vi /etc/shadow
   77  sudo nano /etc/shadow
   78  su - $USER
   79  microk8s
   80  microk8s stop
   81  microk8s status --wait-ready
   82  kubectl version
   83  history
   84  cat /var/snap/microk8s/current/certs/csr.conf.template
   85  kubectl version
   86  su
   87  sudo -i
   88  clear
   89  microk8s status --wait-ready
   90  сфе /etc/opt/chrome/policies/managed/mintlsver.json
   91  cat /etc/opt/chrome/policies/managed/mintlsver.json
   92  cat /var/snap/microk8s/current/certs/csr.conf.template
   93  microk8s status --wait-ready
   94  microk8s start
   95  microk8s status --wait-ready
   96  kubectl version && kubectl get nodes,namespaces
   97  histry
   98  kubectl get secret -n kube-system
   99  kubectl describe secret microk8s-dashboard-token -n kube-system
  100  kubectl get namespaces
  101  kubectl get secret -n kube-system
  102  kubectl describe secret microk8s-dashboard-token -n kube-system
  103  kubectl version && kubectl get nodes,namespaces
  104  echo 'source <(kubectl completion bash)' >>~/.bashrc
  105  echo 'complete -F __start_kubectl k' >>~/.bashrc
  106  source ~/.bashrc
  107  kubectl port-forward -n kube-system service/kubernetes-dashboard 10443:443 --address 0.0.0.0
  108  nano /var/snap/microk8s/current/certs/csr.conf.template
  109  sudo microk8s refresh-certs --cert front-proxy-client.crt
  110  microk8s config > ~/.kube/config
  111  sudo microk8s.refresh-certs --cert ca.crt
  112  mk get service
  113  alias mk='microk8s kubectl'
  114  mk get service
  115  microk8s dashboard-proxy
  116  microk8s kubectl port-forward -n kube-system service/kubernetes-dashboard 10443:443
  117  sudo nano /etc/opt/chrome/policies/managed/mintlsver.json
  118  sudo nano /var/snap/microk8s/current/certs/csr.conf.template
  119  sudo microk8s refresh-certs --cert front-proxy-client.crt
  120  echo $KUBE_VERSION
  121  kubectl version && kubectl get nodes,namespaces
  122  microk8s config > $HOME/.kube/config
  123  cat /.kube/config
  124  cat $HOME/.kube/config
  125  echo 'alias k=kubectl' >>~/.bashrc
  126  echo 'source <(kubectl completion bash)' >>~/.bashrc
  127  echo 'complete -F __start_kubectl k' >>~/.bashrc
  128  token=$(microk8s kubectl -n kube-system get secret | grep default-token | cut -d " " -f1)
  129  microk8s kubectl -n kube-system describe secret $token
  130  kubectl port-forward -n kube-system service/kubernetes-dashboard 10443:443 --address 0.0.0.0
  131  kubectl help
  132  cat $HOME/.kube
  133  cat $HOME/.kube/config
  134  microk8s config > $HOME/.kube/config
  135  cat $HOME/.kube/config
  136  microk8s enable dashboard
  137  microk8s status --wait-ready
  138  sudo microk8s.refresh-certs --cert ca.crt
  139  sudo microk8s.refresh-certs -c
  140  microk8s.refresh-certs -e server.crt
  141  microk8s.refresh-certs -e front-proxy-client.crt
  142  sudo microk8s.refresh-certs -e server.crt
  143  sudo microk8s.refresh-certs -e front-proxy-client.crt
  144  microk8s kubectl port-forward --address 0.0.0.0 -n kube-system service/kubernetes-dashboard 10443:443
  145  clear
  146  microk8s start
  147  kubectl version && kubectl get nodes,namespaces
  148  kubectl get nodes
  149  kubectl port-forward -n kube-system service/kubernetes-dashboard 10443:443 --address 89.169.129.145
  150  sudo microk8s config
  151  kubectl config get-contexts
  152  kubectl config use-context microk8s
  153  kubectl get nodes
  154  kubectl port-forward -n kube-system service/kubernetes-dashboard 10443:443 --address 0.0.0.0
  155  token=$(microk8s kubectl -n kube-system get secret | grep default-token | cut -d " " -f1)
  156  microk8s kubectl -n kube-system describe secret $token
  157  kubectl port-forward -n kube-system service/kubernetes-dashboard 10443:443 --address 0.0.0.0
  158  kubectl version && kubectl get nodes,namespaces
  159  kubectl port-forward -n kube-system service/kubernetes-dashboard 10443:8443 --address 0.0.0.0
  160  kubectl port-forward -n kube-system service/kubernetes-dashboard 10443:443 --address 89.169.129.145
  161  microk8s status --wait-ready
  162  microk8s dashboard-proxy
  163  microk8s enable dashboard
  164  microk8s kubectl port-forward -n kube-system service/kubernetes-dashboard 10443:443 --address 0.0.0.0
  165  microk8s status --wait-ready
  166  microk8s kubectl port-forward -n kube-system service/kubernetes-dashboard 10443:443
  167  microk8s kubectl port-forward -n kube-system service/kubernetes-dashboard 10443:443 --address 0.0.0.0
  168  kubectl get nodes
  169  cat /var/snap/microk8s/current/certs/csr.conf.template
  170  nano /var/snap/microk8s/current/certs/csr.conf.template
  171  sudo microk8s refresh-certs --cert front-proxy-client.crt
  172  ls ~/.kube/
  173  rm ~/.kube/config
  174  microk8s config > ~/.kube/config
  175  kubectl get nodes
  176  ssh administrator@89.169.129.145 "cat ~/.kube/config">~/.kube/config
  177  ssh stitsyuk@89.169.129.145 "cat ~/.kube/config">~/.kube/config
  178  cat $HOME/.kube/config
  179  microk8s config > $HOME/.kube/config
  180  cat $HOME/.kube/config\
  181  microk8s kubectl port-forward -n kube-system service/kubernetes-dashboard 10443:443
  182  kubectl describe secret microk8s-dashboard-token -n kube-system
  183  echo $KUBECONFIG
  184  ls $HOME/.kube/
  185  kubectl get pods
  186  kubectl get namespace
  187  kubectl get svc
  188  kubectl get svc -A
  189  kubectl get svc kubernetes-dashboard -n kube-system
  190  kubectl describe svc kubernetes-dashboard -n kube-system
  191  kubectl get pods --all-namespaces
  192  kubectl get nodes
  193  kubectl create deployment hello-node --image=registry.k8s.io/e2e-test-images/agnhost:2.39 -- /agnhost netexec --http-port=8080
  194  kubectl get deployments.apps
  195  kubectl describe deployments.apps  hello-node
  196  kubectl get pods
  197  kubectl get nodes
  198  kubectl get deployments.apps
  199  kubectl port-forward pods/hello-node-66d457cb86-jskwr 8080:8080
  200  kubectl port-forward pods/hello-node-66d457cb86-jskwr 8080:8080 --address 0.0.0.0
  # http://89.169.129.145:8080/
  201  history

  1  kubectl port-forward pods/hello-node-66d457cb86-jskwr 81:8080 --address 0.0.0.0
  2  kubectl port-forward pods/hello-node-66d457cb86-jskwr 9200:8080 --address 0.0.0.0
  3  kubectl expose deployment hello-node --type=LoadBalancer --port=8080
  4  kubectl get svc
  5  kubectl exec pods/hello-node-66d457cb86-jskwr  echo "Hello"
  6  kubectl exec pods/hello-node-66d457cb86-jskwr echo "Hello"
  7  kubectl exec -h
  8  kubectl exec pods/hello-node-66d457cb86-jskwr -- date
  9  kubectl exec pods/hello-node-66d457cb86-jskwr -- echo "Hello"
  10  kubectl exec pods/hello-node-66d457cb86-jskwr -- ls

  --------------------------------

  #  home work
  1  clear
  2  kubectl create namespace test
  3  kubectl get namespaces
  4  ls
  5  cdk
  6  ls -la
  7  cat kubectl
  8  mkdir minikube_02
  9  cd minikube_02/
  10  nano echoserver.yaml
  11  kubectl apply -f echopod.yaml -n test
  12  kubectl apply -f echoserver.yaml -n test
  13  kubectl port-forward -n test echoserver 8080:8443 --address 0.0.0.0
  14  kubectl get pods -n test
  15  nano echoservice.yaml
  16  ls
  17  kubectl apply -f echoservice.yaml -n test
  18  kubectl port-forward -n test echoserver 8080:8443 --address 0.0.0.0
  19  kubectl get pods -n test
  20  k9s
  21  kubectl port-forward -n test echoserver 8080:8443 --address 0.0.0.0
  22  history