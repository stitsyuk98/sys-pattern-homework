---
- name: Install Nginx
  handlers:
    - name: start-nginx
      ansible.builtin.service:
        name: nginx
        state: restarted
      become: true
      become_method: sudo
    - name: restart-nginx
      ansible.builtin.service:
        name: nginx
        state: reloaded
      become: true
      become_method: sudo
  hosts: lighthouse
  tasks:
    - name: Nginx | Install epel-release
      become: true
      ansible.builtin.yum:
        name: epel-release
        state: present
    - name: Nginx | Install Nginx
      become: true
      ansible.builtin.yum:
        name: nginx
        state: present
    - name: Nginx | Create config
      become: true
      ansible.builtin.template:
        src: templates/nginx.conf.j2
        dest: /etc/nginx/nginx.conf
        mode: '0644'
      notify: start-nginx
  tags: Nginx

- name: Install Lighthouse
  hosts: lighthouse
  handlers:
    - name: restart-nginx
      ansible.builtin.service:
        name: nginx
        state: restarted
      become: true
      become_method: sudo
  pre_tasks:
    - name: Lighthouse | Install Dependencies
      become: true
      ansible.builtin.yum:
        name: git
        state: present
  tasks:
    - name: Create Lighthouse directory
      become: true
      ansible.builtin.file:
        path: /var/www/lighthouse
        state: directory
        recurse: yes
        mode: '0755'
        owner: nginx
        group: nginx

    - name: Lighthouse | Clone from Git
      become: true
      ansible.builtin.git:
        repo: "{{ lighthouse_vcs }}"
        version: master
        dest: "{{ lighthouse_location_dir }}"
    - name: Lighthouse | Create lighthouse config
      become: true
      ansible.builtin.template:
        src: templates/lighthouse.conf.j2
        dest: /etc/nginx/conf.d/default.conf
        mode: '0644'
      notify: restart-nginx
  tags: Lighthouse

- name: Install Clickhouse
  hosts: clickhouse
  handlers:
    - name: Start clickhouse service
      become: true
      ansible.builtin.service:
        name: clickhouse-server
        state: restarted
  tasks:
    - block:
#        - name: "Get {{ clickhouse_packages | flatten(1) }} distrib"
        - name: Get clickhouse
          ansible.builtin.get_url:
            url: "https://packages.clickhouse.com/rpm/stable/{{ item }}-{{ clickhouse_version }}.noarch.rpm"
            dest: "/tmp/{{ item }}-{{ clickhouse_version }}.rpm"
            mode: '0644'
          with_items: "{{ clickhouse_packages }}"
          check_mode: false
      rescue:
        - name: Get clickhouse distrib
          ansible.builtin.get_url:
            url: "https://packages.clickhouse.com/rpm/stable/clickhouse-common-static-{{ clickhouse_version }}.x86_64.rpm"
            dest: "/tmp/clickhouse-common-static-{{ clickhouse_version }}.rpm"
            mode: '0644'
          check_mode: false
    - name: Install clickhouse packages
      become: true
      ansible.builtin.yum:
        name:
          - /tmp/clickhouse-common-static-{{ clickhouse_version }}.rpm
          - /tmp/clickhouse-client-{{ clickhouse_version }}.rpm
          - /tmp/clickhouse-server-{{ clickhouse_version }}.rpm
      notify: Start clickhouse service
    - name: Pause 20 sec
      ansible.builtin.pause:
        seconds: 20
    - name: Flush handlers
      ansible.builtin.meta: flush_handlers
    - name: Create database
      ansible.builtin.command: "clickhouse-client -q 'create database logs;'"
      register: create_db
      failed_when: create_db.rc != 0 and create_db.rc !=82
      changed_when: create_db.rc == 0
  tags: clickhouse

- name: Install Vector
  hosts: vector
  tasks:
    - name: Vector | Install RPM
      become: true
      ansible.builtin.yum:
        name: "{{ vector_url }}"
        state: present
    - name: Vector | Template file
      ansible.builtin.template:
        src: vector.yml.j2
        dest: vector.yml
        mode: '0644'
#        owner: "{{ ansible_user_id }}"
#        group: "{{ ansible_user_gid }}"
#        validate: vector validate --no-environment --config-yaml %s
    - name: Vector | Create Vector service
      become: true
      ansible.builtin.template:
        src: vector.service.j2
        dest: /etc/systemd/system/vector.service
        mode: '0644'
#        owner: "{{ ansible_user_id }}"
#        group: "{{ ansible_user_gid }}"
    - name: Vector | Start service
      become: true
      ansible.builtin.systemd:
        name: vector
        state: started
        daemon_reload: true
  tags: vector
